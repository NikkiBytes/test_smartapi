{
    "title": "The smartAPI extension to OpenAPI 3.0.",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "description": "This is the root document object of the smartAPI definition file.",
    "properties": {
        "info": {
            "$ref": "#/$defs/info"
        },
        "servers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/server"
            }
        },
        "x-externalResources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/externalResource"
            }
        },
        "tags": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/tag"
            }
        },
        "paths": {
            "type": "object",
            "patternProperties": {
                "^\\/": {
                    "type": "object",
                    "patternProperties": {
                        "get|put|post|delete|options|head|patch|trace": {
                            "type": "object",
                            "properties": {
                                "summary": {
                                    "type": "string"
                                },
                                "parameters": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/$defs/Parameter"
                                    }
                                },
                                "responses": {
                                    "type": "object",
                                    "patternProperties": {
                                        "[1-5](?:\\d{2}|XX)": {
                                            "type": "object",
                                            "properties": {
                                                "x-responseValueType": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/$defs/responseValueType"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "x-accessRestriction": {
                                    "type": "string",
                                    "description": "Access restrictions to invoke the operation. values: none, limited, fee.",
                                    "enum": [
                                        "none",
                                        "limited",
                                        "fee"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "$defs": {
        "Reference": {
            "type": "object",
            "required": [
                "$ref"
            ],
            "properties": {
                "$ref": {
                    "type": "string",
                    "format": "uri-reference"
                }
            }
        },
        "info": {
            "properties": {
                "x-otherContacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/contact"
                    }
                },
                "x-accessRestriction": {
                    "type": "string",
                    "enum": [
                        "none",
                        "limited",
                        "fee"
                    ],
                    "description": "Indicate whether there are restrictions to using the API. Values to use: none, limited, fee."
                },
                "x-implementationLanguage": {
                    "type": "string",
                    "description": "API Implementation Language"
                },
                "contact": {
                    "$ref": "#/$defs/contact"
                },
                "termsOfService": {
                    "type": "string",
                    "format": "uri"
                }
            }
        },
        "contact": {
            "properties": {
                "x-role": {
                    "type": "string",
                    "enum": [
                        "responsible organization",
                        "responsible developer",
                        "contributor",
                        "support",
                        "document creator"
                    ]
                },
                "x-id": {
                    "type": "string",
                    "format": "uri",
                    "description": "A resolvable HTTP URI that uniquely identifies the contact (e.g. orcid id github id)"
                }
            }
        },
        "server": {
            "properties": {
                "x-location": {
                    "type": "string",
                    "description": "Location, city and country of the server hosting the API."
                },
                "x-maturity": {
                    "type": "string",
                    "enum": [
                        "development",
                        "staging",
                        "production",
                        "testing"
                    ]
                }
            }
        },
        "externalResource": {
            "type": "object",
            "additionalProperties": false,
            "description": "information about external documentation",
            "required": [
                "x-url",
                "x-type"
            ],
            "properties": {
                "x-description": {
                    "type": "string",
                    "description": "A short description of the target documentation. CommonMark syntax can be used for rich text representation."
                },
                "x-url": {
                    "type": "string",
                    "format": "uri"
                },
                "x-type": {
                    "type": "string",
                    "enum": [
                        "api documentation",
                        "website",
                        "developer forum",
                        "mailing list",
                        "social media",
                        "publication"
                    ]
                }
            }
        },
        "Parameter": {
            "properties": {
                "x-valueType": {
                    "type": "array",
                    "description": "a list of semantic identifiers of the parameter from identifiers.org, e.g. [http://identifiers.org/ncbigene/]",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    },
                    "uniqueItems": true
                },
                "x-parameterType": {
                    "type": "string",
                    "description": "Type of parameter, e.g. InputParameter, NumberOfResultsReturned, OffsetParameter, SortParameter."
                }
            }
        },
        "responseValueType": {
            "description": "The responseValueType field is now deprecated, switch to x-bte extensions for semantic annotation of the API response.",
            "allOf": [
                {
                    "anyOf": [
                        { "required": ["path"] },
                        { "required": ["x-path"] }
                    ]
                },
                {
                    "anyOf": [
                        { "required": ["valueType"] },
                        { "required": ["x-valueType"] }
                    ]
                }
            ]
        },
        "tag": {
            "properties": {
                "x-id": {
                    "type": "string",
                    "description": "The name of the tag. Recommend that you use URI to specify the concept."
                }
            }
        },
        "schema": {
            "properties": {
                "x-url": {
                    "type": "string",
                    "description": "The URL to a non-JSON schema."
                }
            }
        }
    }
}
